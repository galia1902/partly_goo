<div class="pillbox_outer back-opac">
  <div class="game_inner">
    <div>
      <a href="/">
        <div class="logo-40-px" style="background-image"></div>
      </a>
    </div>
    <div class="pillbox-add-top-margin ">
      <div class="pill-question pill-align-left"><%= @question.content %></div>
      <div class="pill hidden">spacer</div>
      <% if @rounds.last.nil?  %>

      <div class="set-width">
        <div class="go_back">
          <div class="pill-outer">
            <h2>1</h2>
          </div>

          <div class="pill-outer">
            <h2>2</h2>
          </div>

          <div class="pill-outer">
            <h2>3</h2>
          </div>

          <div class="pill-outer">
            <h2>4</h2>
          </div>
        </div>


      <ul id="quest-sort" class="container-sortable">

        <!-- Initialize counter to cycle through colors   -->
        <% color_order = ['red', 'green', 'blue', 'yellow'] %>
        <% position_counter = 0 %>

        <!-- Loop through answers, rendering each element w/ the relevant id -->
        <% @answers.each_with_index do |answer, index| %>
          <% my_class =  "sort-option pill-sortable pill-align-sortable pill-#{color_order[position_counter]}"%>
          <li class="<%= my_class %>" data-answer-number="<%= answer.id %>">
            <i class="fas fa-bars"></i>
            <%= answer.content %>
          </li>
          <% position_counter += 1 %>
          <% end %>
      </ul>

      </div>

      <% end %>

    </div>
  </div>

  <%= form_tag game_rounds_path(@game) do %>
    <% @answers.each_with_index do |answer, index| %>
      <%= hidden_field_tag "answer_#{index + 1}", answer.id %>
    <% end %>
    <%= submit_tag "Next", id: 'submit-button', class: 'pill d-flex justify-content-center' %>
  <% end %>

  <%#= button_to "Next",
                 game_rounds_path(@game),
                 id: "submit-button",
                 class: 'pill d-flex justify-content-center',
                 params: {round: {duration: 30, question_id: '', submitted_order: '' }} %>

</div>

<script>

  // Script to during the make the Body element grey
  let myBody = document.querySelector('body');
  const changeBodyBackgroundColor = () => {
    myBody.style.background = '#F8F9FA';
  }
  changeBodyBackgroundColor();

  // Script making scoreButton capture current scores when clicked
  const getCurrentSort = () => {
    let sorted = document.querySelectorAll(".sort-option")
    console.log(sorted);
    return sorted;
  }

  const bindGetSortToReveal = () => {
    let scoreButton = document.getElementById("submit-button")
    scoreButton.addEventListener("click", (event) => {
      // event.preventDefault()
      let answersOrdered = getCurrentSort();

      let i = 0
      answersOrdered.forEach((answer) => {
        let value = answer.dataset.answerNumber
        let formInput = document.querySelector(`input[name="answer-${i + 1}"]`)
        formInput.value = value
        i++
      })
      // DEBUG:
      console.log('FORM INPUTS')
      document.querySelectorAll('input[name*=answer]').forEach((input) => {
        console.log(input.value)
      })
      // .....

      // testAnswerOrder = "1450 1451 1452 1453"
      // scoreButton.parentElement.querySelector("[name")
    })
  }
  bindGetSortToReveal()






  // Script copied from game.html.erb --> use as model for getting data from elements
  if(typeof(handleChosenAnswer) === 'undefined'){
      let answer = document.querySelectorAll('.mcq-answer');

      let handleChosen = (ans) => {
        let lastButton = document.querySelector('.last-button');
          answer.forEach((an) => {
            if(an.id === ans.id){
              let inputs = an.parentElement.querySelectorAll('[name*=round]');
              inputs.forEach((input) => {
                lastButton.parentElement.querySelector("[name=" + `"${input.name}"]`).value = input.value;
              })
              changeChosenStyle(an);

            }else{
              an.style.opacity = '.5';
            }
          })
      }


      let handleChosenAnswer = () => {
        answer.forEach((ans) => {
          ans.addEventListener('click', (event) => {
            event.preventDefault();
            let clicked = event.currentTarget;
            handleChosen(clicked);
            let session = sessionStorage.getItem('chosen');
            let chosen = session === null ? false : true;
            if(chosen){
             document.querySelectorAll('.mcq-answer').forEach(elem => {
               elem.disabled = true;
             });
            }else{
              sessionStorage.setItem('chosen', true);
            }
          })
        })
      }

      handleChosenAnswer();
    }else{
      handleChosenAnswer();
    }




 </script>
